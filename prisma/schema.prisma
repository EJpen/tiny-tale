// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x", "rhel-openssl-3.0.x", "linux-musl", "linux-musl-openssl-3.0.x"]
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  rooms Room[]

  @@map("users")
}

model Room {
  id         String   @id @default(uuid())
  trusteeId  String
  roomName   String   @db.Text
  gender     String
  ownerPin   String?
  memberPin  String?
  isClose    Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  trustee User   @relation(fields: [trusteeId], references: [id], onDelete: Cascade)
  votes   Vote[]

  @@map("rooms")
}

model Vote {
  id        String   @id @default(uuid())
  roomId    String
  name      String   @db.Text
  gender    String
  isOut     Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@map("votes")
}
